const handleFetchWeatherData = async () => {
    if (!formData.state || !formData.district) {
      toast.error("Please select state and district");
      return;
    }
    try {
      toast.loading("Fetching weather data...");
      const geoResponse: AxiosResponse = await axios.get(
        `http://api.openweathermap.org/geo/1.0/direct?q=${formData.district},${formData.state},IN&limit=1&appid=${process.env.NEXT_PUBLIC_OPENWEATHERMAP_API_KEY}`
      );

      if (geoResponse.data.length === 0) {
        toast.error("Invalid state or district");
        return;
      }

      const { lat, lon } = geoResponse.data[0];
      const weatherResponse: AxiosResponse = await axios.get(
        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.NEXT_PUBLIC_OPENWEATHERMAP_API_KEY}`
      );

      const { main } = weatherResponse.data;

      setFormData({
        ...formData,
        temperature: main.temp,
        humidity: main.humidity,
      });
      toast.dismiss();
      toast.success("Weather data fetched successfully!");
    } catch (error) {
      console.error("Error fetching weather data:", error);
      toast.error("Failed to fetch weather data");
    }
  };